[tox]
envlist = py, lint, fmt, proto3

[testenv]
description = run tests with pytest with coverage
extras =
    all
    dev-test
passenv =
    LOG_LEVEL
    LOG_FILTERS
    LOG_FORMATTER
    LOG_THREAD_ID
    LOG_CHANNEL_WIDTH
commands = pytest --cov=caikit --cov-report=html:coverage-{env_name} --cov-report=xml:coverage-{env_name}.xml --html=durations/{env_name}.html {posargs:tests -m "not examples"} -W error::UserWarning

; Unclear: We probably want to test wheel packaging
; But! tox will fail when this is set and _any_ interpreter is missing
; Without this, sdist packaging is tested so that's a start.
package=wheel

[testenv:docs]
recreate = True
extras = dev-docs
changedir = docs/source

; Disabled '-W' flag as warnings in the files
; TOTO: Add back in once build warnings fixed
commands =
  sphinx-build -E -a -b html -T . _build/html

[testenv:fmt]
description = format with pre-commit
extras = dev-fmt
commands = ./scripts/fmt.sh
allowlist_externals = ./scripts/fmt.sh

[testenv:lint]
description = lint with pylint
extras =
    all
    dev-fmt
    dev-test
commands = pylint caikit examples/text-sentiment/text_sentiment examples/text-sentiment/*.py examples/sample_lib/*.py

[testenv:imports]
description = enforce internal import rules
extras = dev-fmt
commands = ./scripts/check_deps.sh
allowlist_externals = ./scripts/check_deps.sh

[testenv:build]
description = build wheel
deps =
    build
    setuptools
commands = python -m build
skip_install = True

[testenv:twinecheck]
description = check wheel
deps = twine
commands = twine check dist/*

# Ensure compatibility is maintained with protobuf 3.X
[testenv:proto3]
description = run tests with pytest with coverage
commands =
    pip uninstall grpcio-health-checking grpcio-reflection -y
    pip install protobuf==3.19.0 grpcio-health-checking grpcio-reflection --upgrade
    pytest --cov=caikit --cov-report=html {posargs:tests -m "not examples"}

# Ensure tests targeting caikit.core can be run with no optional dependencies
[testenv:core]
description = run tests against caikit.core without any extras
base = ""
extras = dev-test
commands =
    pytest tests/core

# Runs dsconverter on caikit
[testenv:dsconverter]
description = convert docstrings to google
commands = python ./scripts/dsconverter.py caikit
